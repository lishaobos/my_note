
***第一种分离思想***

1.创建一个项目文件夹。
2.项目文件夹里面放 server 和 views 两个文件夹
3.server文件夹里面放 express项目，views里面放创建的 vue项目
4.在express项目下 npm i -S cors (安装cors，这是跨域技术)
5.在app.js下面
    1. var cors = require('cors');
    2. app.use(cors({ //这里面的配置在 npm cors网站下面有一个配置选项，里面有我们所需要的各种配置需要的字段
       origin:['http://localhost:8080'],//允许这个域的访问
       methods:['GET','POST'],//只允许post和get请求
       alloweHeaders:['Conten-Type','Authorization']//只允许带这两种请求头的连接访问
    }));
6.在server文件夹里的项目下 
    1. npm i -S axios (引入axios)
    2. 在main.js下 
          1. import axios from 'axios';
          2. Vue.prototype.$axios = axios;
          3. axios.defaults.baseURL = 'http://localhost:3000';
    3. 然后在vue的生命周期函数里面  this.$axios.get.......就可以了

*
对于跨域请求出现的一个问题，报错显示没有可以允许的请求头
allowedHeaders:['Conten-Type','Authorization','Access-Control-Allow-Headers','DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,access_token']
把原来的这些再加上一些请求头就好了


对于上传图片，再做个笔记，下面分别是 ajax 和 axios 两种上传图片的方法
1.ajax
  <form  id="snake"  enctype="multipart/form-data">
      <input  multiple  type="file" name="photo">
  </form>
  var formData = new FormData($('#snake')[0]);
  $.ajax({
    type:'post',
    url:'xxx',
    data:formData, 
    processData: false,//用于对data参数进行序列化处理 这里必须false
    contentType: false, //必须
  });

2.axios
  <form  method="post" enctype="multipart/form-data">
      <input ref='upload' multiple @change='sc' type="file" name="photo">
  </form>
      var formData = new FormData();
      for(let i=0;i<this.$refs.upload.files.length;i++){//这个循环是把所有选中的文件信息添加到对象中
        formData.append('photo',this.$refs.upload.files[i]);
      }
      this.$axios.post('/api/home/photos',formData)

//这是第3种上传图片的办法，用了 formidable 中间件
var formidable = require('formidable');
var fs = require('fs');
var path =  require('path');
router.post('/photos', (req, res, next) => {  console.log(222)
  let form = new formidable.IncomingForm()
  form.encoding = 'utf-8' // 编码
  form.keepExtensions = true // 保留扩展名
  form.uploadDir = path.join(__dirname, './../public/images/') //文件存储路径 最后要注意加 '/' 否则会被存在public下
  form.parse(req, (err, fileds ,files) => { // 解析 formData 数据
    if(err) return next(err) 
    console.log(fileds,files);
    let username = fileds.name //用户名 用于修改用户头像路径
    let oldPath = files.file.path //获取文件路径 ~/public/images/<随机生成的文件名>.<扩展名>
    let imgname = files.file.name //前台上传时的文件名 也就是文件原本的名字
    let userImgname = imgname.replace(/[^.]+/, '1.jpg') //把扩展名前的文件名给替换掉
    console.log(username)
    //我这里为了方便存储 统一将文件名改为 <用户名>.jpg
    let newPath = path.join(path.dirname(oldPath), userImgname) 
    fs.rename(oldPath, newPath, (err) => {
      if(err) return next(err)
      // Model.User.updateOne({ name: username },  //更新用户的avatar属性
      //   { avatar: userImgname }, err => {
      //     if(err) return next(err)
      //     res.json({ avatar: userImgname })                     
      //   })
      })
  })
})