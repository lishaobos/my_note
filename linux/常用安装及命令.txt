##本页面用于 linux 下 一些常用工具的安装记录
# 注：软件一般建议安装在 opt 目录下

## yum 包的安装
    1.在网上找一个 yum 的包
    2.tar -zxvf -zxvf yum-3.4.3.tar.gz #假设这个是下载的包
    3.解压后进入 yum解压文件夹目录
    4.更新到最新
    ./yummain.py update

## 防火墙的安装
    安装命令：yum install iptables-services 
    # 查看防火墙状态：systemctl status firewalld
    # 关闭防火墙：systemctl stop firewalld
    # 禁止防火墙：systemctl disable firewalld

## 安装 node
    地址：https://github.com/nodejs/help/wiki/Installation #根据node官网教程就行，只是第三步变成 source ./profile  
    1.在你的文件夹下安装（假设在 /usr/local/lib/nodejs）
        VERSION=v10.15.0
        DISTRO=linux-x64
        sudo mkdir -p /usr/local/lib/nodejs
        sudo tar -xJvf node-$VERSION-$DISTRO.tar.xz -C /usr/local/lib/nodejs 
    2.去添加环境变量
        1.找到 .profile 文件
        2.编辑
        # Nodejs
        VERSION=v10.15.0
        DISTRO=linux-x64
        export PATH=/usr/local/lib/nodejs/node-$VERSION-$DISTRO/bin:$PATH
    3.source ./profile
    4.node -v

## 安装 nginx
    1.安装 gcc、pcre-devel、zlib-devel、openssl-devel。
        yum -y install gcc pcre-devel zlib-devel openssl openssl-devel
    2.下载nginx安装包
        wget https://nginx.org/download/nginx-1.9.9.tar.gz
    3.解压
        tar -zxvf nginx-1.9.9.tar.gz
    4.进入解压目录执行
        ./configure --prefix=/usr/local/nginx   
    5.make
    6.make install
    7.启动 nginx 看是否成功
        1. cd /usr/local/nginx/sbin
        2. ./nginx start
        3. ps -ef | grep nginx #查看进程

    nginx编译选项： 
    ···
    # make是用来编译的，它从Makefile中读取指令，然后编译。
    # make install是用来安装的，它也从Makefile中读取指令，安装到指定的位置。
    # configure命令是用来检测你的安装平台的目标特征的。它定义了系统的各个方面，包括nginx的被允许使用的连接处理的方法，比如它会检测你是不是有CC或GCC，并不是需要CC或GCC，它是个shell脚本，执行结束时，它会创建一个Makefile文件。nginx的configure命令支持以下参数：
    # –prefix=path 定义一个目录，存放服务器上的文件 ，也就是nginx的安装目录。默认使用 /usr/local/nginx。
    # –sbin-path=path 设置nginx的可执行文件的路径，默认为 prefix/sbin/nginx.
    # –conf-path=path 设置在nginx.conf配置文件的路径。nginx允许使用不同的配置文件启动，通过命令行中的-c选项。默认为prefix/conf/nginx.conf.
    # –pid-path=path 设置nginx.pid文件，将存储的主进程的进程号。安装完成后，可以随时改变的文件名 ， 在nginx.conf配置文件中使用 PID指令。默认情况下，文件名 为prefix/logs/nginx.pid.
    # –error-log-path=path 设置主错误，警告，和诊断文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的error_log指令。默认情况下，文件名 为prefix/logs/error.log.
    # –http-log-path=path 设置主请求的HTTP服务器的日志文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的access_log指令。默认情况下，文件名 为prefix/logs/access.log.
    # –user=name 设置nginx工作进程的用户。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的用户名是nobody。
    # –group=name 设置nginx工作进程的用户组。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的为非特权用户。
    # –with-select_module --without-select_module 启用或禁用构建一个模块来允许服务器使用select()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。
    # –with-poll_module --without-poll_module 启用或禁用构建一个模块来允许服务器使用poll()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。
    # –without-http_gzip_module — 不编译压缩的HTTP服务器的响应模块。编译并运行此模块需要zlib库。
    # –without-http_rewrite_module 不编译重写模块。编译并运行此模块需要PCRE库支持。
    # –without-http_proxy_module — 不编译http_proxy模块。
    # –with-http_ssl_module — 使用https协议模块。默认情况下，该模块没有被构建。建立并运行此模块的OpenSSL库是必需的。
    # –with-pcre=path — 设置PCRE库的源码路径。PCRE库的源码（版本4.4 - 8.30）需要从PCRE网站下载并解压。其余的工作是Nginx的./ configure和make来完成。正则表达式使用在location指令和 ngx_http_rewrite_module 模块中。
    # –with-pcre-jit —编译PCRE包含“just-in-time compilation”（1.1.12中， pcre_jit指令）。
    # –with-zlib=path —设置的zlib库的源码路径。要下载从 zlib（版本1.1.3 - 1.2.5）的并解压。其余的工作是Nginx的./ configure和make完成。ngx_http_gzip_module模块需要使用zlib 。
    # –with-cc-opt=parameters — 设置额外的参数将被添加到CFLAGS变量。例如,当你在FreeBSD上使用PCRE库时需要使用:–with-cc-opt="-I /usr/local/include。.如需要需要增加 select()支持的文件数量:–with-cc-opt="-D FD_SETSIZE=2048".
    # –with-ld-opt=parameters —设置附加的参数，将用于在链接期间。例如，当在FreeBSD下使用该系统的PCRE库,应指定:–with-ld-opt="-L /usr/local/lib".
    ···

## 安装 mysql
    1.下载mysql的repo源
        wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm 
    2.下载安装包
        rpm -ivh mysql-community-release-el7-5.noarch.rpm
    3.安装
        sudo yum install mysql-server #如果存在进程， kill -9 进程ID 

    # 本地连不上数据库的解决办法
    1.mysql
    2.use mysql #使用 mysql 数据库
    3.delete from user where USER=''; 或者 UPDATE user SET Password=PASSWORD('newpassword') where USER='root';
    4.FLUSH PRIVILEGES;
    5.如果还不行就执行下面两步
        1.停止 mysql
        2.mysqld_safe --skip-grant-table #屏蔽权限
    # 注：如果重新启动连不上数据库就执行第 5 步
    
    # 本地连不上数据库的新解决办法
    1.mysql
    2.use mysql #使用 mysql 数据库
    3.delete from `user`;
    4.插入 sql
 INSERT INTO `user` (`Host`, `User`, `Password`, `Select_priv`, `Insert_priv`, `Update_priv`, `Delete_priv`, `Create_priv`, `Drop_priv`, `Reload_priv`, `Shutdown_priv`, `Process_priv`, `File_priv`, `Grant_priv`, `References_priv`, `Index_priv`, `Alter_priv`, `Show_db_priv`, `Super_priv`, `Create_tmp_table_priv`, `Lock_tables_priv`, `Execute_priv`, `Repl_slave_priv`, `Repl_client_priv`, `Create_view_priv`, `Show_view_priv`, `Create_routine_priv`, `Alter_routine_priv`, `Create_user_priv`, `Event_priv`, `Trigger_priv`, `Create_tablespace_priv`, `ssl_type`, `ssl_cipher`, `x509_issuer`, `x509_subject`, `max_questions`, `max_updates`, `max_connections`, `max_user_connections`, `plugin`, `authentication_string`) VALUES 
('%','root','','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'',''),
('127.0.0.1','root','','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'',''),  ('::1','root','','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'',''), ('localhost','','','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'','');

    # mysql 命令
        1.service mysqld stop 
        2.service mysqld start 
        3.service mysqld restart
